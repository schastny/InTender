<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<http 	access-denied-page="/error403.ftl" 
			access-decision-manager-ref="accessDecisionManager">
		<intercept-url pattern="/admin/tender/delete/**" 	access="ROLE_ADMIN" />
		<intercept-url pattern="/admin/division/delete/**" 	access="ROLE_ADMIN" />
		
		<intercept-url pattern="/admin/tender/store" 		access="ROLE_ADMIN, ROLE_MANAGER" />
		<intercept-url pattern="/admin/division/store" 		access="ROLE_ADMIN, ROLE_MANAGER" />
	
		<intercept-url pattern="/admin/**" 					access="ROLE_ADMIN, ROLE_MANAGER" />
		<intercept-url pattern="/admin/*" 					access="ROLE_ADMIN, ROLE_MANAGER" />
		<intercept-url pattern="/admin**" 					access="ROLE_ADMIN, ROLE_MANAGER" />
		<intercept-url pattern="/*" 						access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS" />

		<form-login login-page="/login" default-target-url="/index"
			authentication-failure-url="/login?error=true" />
		<logout logout-url="/logout" logout-success-url="/index" />
		
		<anonymous username="guest" granted-authority="ROLE_ANONYMOUS" />
		<remember-me />
	</http>

	<!-- Bean to make Access Control Decisions -->
	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
				<beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
				<beans:bean class="net.schastny.intender.security.DivManagerVoter" />
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- Beans to store users with Hibernate -->
	<beans:bean id="authenticationManager"
		class="org.springframework.security.authentication.ProviderManager">
		<beans:property name="providers">
			<beans:list>
				<beans:ref local="daoAuthenticationProvider" />
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!--  My custom implementation of UserDetailsService - 
		net.schastny.intender.service.UserManagerServiceImpl -->
	<beans:bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="userDetailsService" />
	</beans:bean>	

	<authentication-manager>
		<authentication-provider user-service-ref="userDetailsService">
			<!-- <password-encoder hash="md5" />  -->
		</authentication-provider>
	</authentication-manager>
	
	<!--  
	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="admin" password="pass" authorities="ROLE_ADMIN,ROLE_USER" />
				<user name="user1" password="1111" authorities="ROLE_USER" />
				<user name="user2" password="2222" disabled="true" authorities="ROLE_USER" />
			</user-service>
		</authentication-provider>
	</authentication-manager> 
	-->

</beans:beans>